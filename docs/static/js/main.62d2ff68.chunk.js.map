{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","onChange","target","value","placeholder","type","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,CAAC,KAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OAEI,sBACKC,SAVY,SAACC,GAClBA,EAAEC,iBACFN,GAAc,SAAAO,GAAI,OAAKL,GAAL,mBAAoBK,OACtCJ,EAAc,KAMd,SAEA,uBACMK,SAhBgB,SAACH,GACvBF,EAAcE,EAAEI,OAAOC,QAgBvBA,MAAUR,EACVS,YAAc,oBACdC,KAAO,Y,+BCxBFC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAG,UAAEA,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCWLO,EAVK,SAACL,GAEjB,OADAM,QAAQC,IAAIP,GAER,sBAAKQ,UAAU,yCAAf,UACI,qBAAKC,IAAKT,EAAIA,IAAKU,IAAI,cACvB,4BAAIV,EAAIE,YCkBLS,EArBC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EAEZb,mBAAS,CAC/BoB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACN1B,EAASC,GACJ0B,MAAM,SAAAhB,GACHc,EAAS,CACLjB,KAAKG,EACLY,SAAQ,SAGtB,CAACtB,IAEIuB,EDdgBI,CAAa3B,GAA7BO,EAFqB,EAErBA,KAAKe,EAFgB,EAEhBA,QAGZ,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDlB,IACnDsB,GAAW,mBAAGJ,UAAU,mCAAb,kCACX,qBAAKA,UAAU,YAAf,SAEIX,EAAKE,KAAI,SAAAC,GACN,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aEXpBiB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,KAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,gCACI,gDACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEQ2C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADNA,Y,MCdjC8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.62d2ff68.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(['']);\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <\r\n        form onSubmit = { handleSubmit } >\r\n        <\r\n        input onChange = { handleInputChange }\r\n        value = { inputValue }\r\n        placeholder = \"Buscar por nombre\"\r\n        type = \"text\" / >\r\n        <\r\n        /form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","   // Declaration of call to api\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=OKCas8wadzWBybPi1Lj8dYcxM3P3iDNJ`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            img: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return (gifs);\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = (img) => {\r\n    console.log(img);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.img} alt=\"img.title\"/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data,loading} = useFetchGifs(category);\r\n \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading, please wait</p>}\r\n            {<div className=\"card_grid\">\r\n                \r\n                {data.map(img => {\r\n                    return(<GifGridItem\r\n                        key={img.id}\r\n                        {...img}/>)\r\n                })}\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs( category )\r\n            .then( img=> {\r\n                setState({\r\n                    data:img,\r\n                    loading:false\r\n                })\r\n            })\r\n    },[category])\r\n\r\n    return state; //{ data:[], loading:true}\r\n};","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['']);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Gif Expert APP</h2>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category= {category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}